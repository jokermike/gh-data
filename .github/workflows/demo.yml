name: Deploy website
on:
  push:
    branches:
      - master
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: cache dependencies #conserver dans le cache les dependances pour pouvoir les reutiliser pour de nouveaux jobs
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: deps-node-modules-${{hashFiles('**/package-lock.json')}}
      - name: Install dependencies
        run: npm ci
      - name: Lint code
        run: npm run lint
      - name: Test code
        run: npm run test
  build:
    needs: test
    runs-on: ubuntu-latest
    outputs:
      script-file: ${{ steps.publish.outputs.script-file }}
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: cache dependencies #reutilisation des fichiers en cache
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: deps-node-modules-${{hashFiles('**/package-lock.json')}}
      - name: Install dependencies
        run: npm ci
      - name: Build website
        run: npm run build
      - name: Publish JS Filename
        id: publish
        run: find dist/assets/*.js -type f -execdir echo '::set-output name=script-file::{}'>>$GITHUB_OUTPUT ';'
      - name : Upload artifacts
      
        uses: actions/upload-artifact@v3
        with:
          name: dist-files
          path: dist
          # path: | #important pour les fichiers multiples ..le |
          #   dist
          #   package.json

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Get build artifacts
        uses: actions/download-artifact@v3
        with :
          name: dist-files
      - name: Output contents
        run : ls
      - name: Output filename
        run: echo "${{needs.build.outputs.script-file }}" #afficher le contenu de script-file du job build
      - name: Deploy
        run: echo "Deploying..."
